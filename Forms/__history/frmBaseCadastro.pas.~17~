unit frmBaseCadastro;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, frmBase, Vcl.ExtCtrls, udmDados,
  untMensagens, System.Actions, Vcl.ActnList, Data.DB;

type
  TFormBaseCadastro = class(TFormBase)
    ActionList: TActionList;
    ActVoltar: TAction;
    ActSalvar: TAction;
    ActCancelar: TAction;
    ActExcluir: TAction;
    dts: TDataSource;
    procedure ActVoltarExecute(Sender: TObject);
    procedure ActSalvarExecute(Sender: TObject);
    procedure ActCancelarExecute(Sender: TObject);
  private
    { Private declarations }
    editou: boolean;
  public
    { Public declarations }
  end;

var
  FormBaseCadastro: TFormBaseCadastro;

implementation

{$R *.dfm}

procedure TFormBaseCadastro.ActCancelarExecute(Sender: TObject);
begin
  dts.DataSet.Cancel;
  Close;
end;

procedure TFormBaseCadastro.ActSalvarExecute(Sender: TObject);
var mensagem: string;
    i: integer;
begin
  try
    for i := 0 to dts.DataSet.FieldCount-1 do
      if (dts.DataSet.Fields[i].Required and (dts.DataSet.Fields[i].IsNull or (Trim(dts.DataSet.Fields[i].AsString) = ''))) then
        raise Exception.Create('Campo obrigatório, informe o valor do(a): ' + dts.DataSet.Fields[i].DisplayLabel);

    if (dts.DataSet.State = dsInsert) then
      mensagem := 'Cadastro realizado com sucesso'
    else
      mensagem := 'Alterações realizadas com sucesso!';
    dts.DataSet.Post;
    FormMensagens.Mensagem(mensagem, '', msgOk);
    Close;
  except
    on e: exception do
      FormMensagens.Mensagem('Problema ao Salvar', e.Message, msgErro);
  end;
end;

procedure TFormBaseCadastro.ActVoltarExecute(Sender: TObject);
begin
  Close;
end;

end.
